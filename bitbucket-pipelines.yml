# Deploy this Flutter project to an AWS S3 bucket.
# Run tests, code linting and security scans on feature branches (as well as master).
# Validate the app, deploy to S3 and trigger an AWS Cloudfront distribution invalidation to refresh the CDN caches after the code is merged to master.
image: instrumentisto/flutter:latest
pipelines:
  branches:
    main:
      - step:
          name: Build and Deploy to Prod S3
          script:
            - echo "================= Start Flutter Build ================="
            - flutter pub get
            - flutter build web --dart-define=ENV=prod --web-renderer canvaskit --release
            - if [ $? -ne 0 ]; then echo "Flutter build failed!"; exit 1; fi
            - echo "Flutter build succeeded."
          artifacts:
            - build/**
      - step:
          name: Deploy to Prod S3
          script:
            - echo "================= Start S3 Deployment ================="
            - echo "Uploading web app files to S3..."
            - pipe: atlassian/aws-s3-deploy:1.1.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                S3_BUCKET: 'testapppoc'
                LOCAL_PATH: 'build/web'
            - if [ $? -ne 0 ]; then echo "S3 deployment failed!"; exit 1; fi
            - echo "S3 deployment succeeded."
    